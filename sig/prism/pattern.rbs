module Prism
  class Pattern
    class CompilationError < StandardError
      def initialize: (String) -> void
    end

    attr_reader query: String

    @compiled: Proc?

    def initialize: (String query) -> void
    def compile: () -> Proc
    def scan: (node root) { (node) -> void } -> void
            | (node root) -> ::Enumerator[node, void]

    private

    def combine_and: (Proc, Proc) -> Proc
    def combine_or: (Proc, Proc) -> Proc
    def compile_error: (node) -> Proc
    def compile_array_pattern_node: (ArrayPatternNode) -> Proc
    def compile_alternation_pattern_node: (AlternationPatternNode) -> Proc
    def compile_constant_path_node: (ConstantPathNode) -> Proc
    def compile_constant_read_node: (ConstantReadNode) -> Proc
    def compile_hash_pattern_node: (HashPatternNode) -> Proc
    def compile_nil_node: (NilNode) -> Proc
    def compile_regular_expression_node: (RegularExpressionNode) -> Proc
    def compile_string_node: (StringNode) -> Proc
    def compile_symbol_node: (SymbolNode) -> Proc
    def compile_node: (node) -> Proc
  end
end
