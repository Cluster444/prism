module Prism
  class ParseResult[T]
    class Comments
      interface _Target
        def start_offset: () -> Integer
        def end_offset: () -> Integer
        def encloses?: (comment) -> bool
        def <<: (comment) -> void
      end

      class NodeTarget
        include _Target

        attr_reader node: Prism::node

        def initialize: (Prism::node) -> void
      end

      class LocationTarget
        include _Target

        attr_reader location: Location

        def initialize: (Location) -> void
      end

      attr_reader parse_result: ParseResult[Prism::node]

      def initialize: (ParseResult[Prism::node]) -> void
      def attach!: () -> void

      private

      def nearest_targets: (Prism::node, comment) -> (untyped | ::Array[untyped])
    end

    def attach_comments!: () -> void
  end
end
